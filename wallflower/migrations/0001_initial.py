# Generated by Django 3.1.7 on 2021-02-26 00:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_created', models.DateField(verbose_name='Profile Created On')),
                ('role', models.CharField(max_length=255, verbose_name='User Demographic')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UpliftingContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Article Name')),
                ('description', models.CharField(max_length=200, verbose_name='Article Description')),
                ('img_url', models.URLField(max_length=500, verbose_name='Image URL')),
                ('src', models.CharField(max_length=200, verbose_name='Article Source')),
                ('article_link', models.URLField(max_length=500, verbose_name='Article URL')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_uplifting_content', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "User's Uplifting Content",
                'verbose_name_plural': "User's Uplifting Content",
            },
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Mood Name')),
                ('created_at', models.DateTimeField(verbose_name='Mood Log Created On')),
                ('note_entry', models.CharField(max_length=100, verbose_name='Note On Mood Log')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_mood', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Mood',
                'verbose_name_plural': "User's Moods",
            },
        ),
        migrations.CreateModel(
            name='Meditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Meditation Name')),
                ('purpose', models.CharField(max_length=200, verbose_name='Purpose of Meditation')),
                ('benefit', models.CharField(max_length=200, verbose_name='Benefit')),
                ('length', models.DurationField(verbose_name='Meditation Length')),
                ('type_of_meditation', models.CharField(max_length=200, verbose_name='Type of Meditation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_meditation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "User's Meditation",
                'verbose_name_plural': "User's Meditations",
            },
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Habit Name')),
                ('description', models.TextField(max_length=300, verbose_name='Habit Description')),
                ('created_at', models.DateTimeField(verbose_name='Habit Created On')),
                ('note_entry', models.CharField(max_length=100, verbose_name='Note on Habit Created')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_habit', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "User's Habit",
                'verbose_name_plural': "User's Habits",
            },
        ),
    ]
